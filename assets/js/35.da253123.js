(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{198:function(v,_,t){"use strict";t.r(_);var i=t(0),a=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"网络基础知识"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络基础知识","aria-hidden":"true"}},[v._v("#")]),v._v(" 网络基础知识")]),v._v(" "),t("p",[v._v("相关文章: [[Node.js 介绍]] [[Node.js 原理详解]]")]),v._v(" "),t("h2",{attrs:{id:"课程目标"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#课程目标","aria-hidden":"true"}},[v._v("#")]),v._v(" 课程目标")]),v._v(" "),t("ul",[t("li",[v._v("了解 TCP/IP 协议, 熟悉 OSI 模型")]),v._v(" "),t("li",[v._v("熟悉 HTTP 相关知识")])]),v._v(" "),t("h2",{attrs:{id:"知识要点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#知识要点","aria-hidden":"true"}},[v._v("#")]),v._v(" 知识要点")]),v._v(" "),t("h3",{attrs:{id:"tcp-ip-网络协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip-网络协议","aria-hidden":"true"}},[v._v("#")]),v._v(" TCP/IP 网络协议")]),v._v(" "),t("h4",{attrs:{id:"osi-七层模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#osi-七层模型","aria-hidden":"true"}},[v._v("#")]),v._v(" OSI 七层模型")]),v._v(" "),t("ul",[t("li",[v._v("第七层：应用层 为操作系统或者网络应用程序提供访问网络服务的接口\n举例: HTTP HTTPS SMTP POP3 SSH")]),v._v(" "),t("li",[v._v("第六层：表示层 压缩以及格式转换，不涉及过多的协议")]),v._v(" "),t("li",[v._v("第五层：会话层 负责设置和维持网络设备之间的连接")]),v._v(" "),t("li",[v._v("第四层：传输层 把传输表头加到数据包上，完成端到端的数据传输\n举例：TCP UDP")]),v._v(" "),t("li",[v._v("第三层：网络层 负责对子网间的数据包进行寻址和路由选择，可以实现拥塞控制、网际互联等功能。\n举例： IP")]),v._v(" "),t("li",[v._v("第二层：数据链路层 物理地址寻址")]),v._v(" "),t("li",[v._v("第一层：物理层 在局域网进行数据传输，负责电脑通信设备与网络设备之间的连接")])]),v._v(" "),t("ol",[t("li",[v._v("牛客网视频面试采用的是 UDP 协议，用来保证传输数据的实时性，没有办法保证数据的正确完整性")]),v._v(" "),t("li",[v._v("路由器是在网络层，交换机是在数据链路层，网卡，光纤等设备在物理层")]),v._v(" "),t("li",[v._v("HTML 属于应用层协议")]),v._v(" "),t("li",[v._v("协议是什么？协议定义了每一层的指责和作用是什么，类似于规范和约束")]),v._v(" "),t("li",[v._v("TCP/IP 网络协议大部分时候是指互联网通信所需的以 TCP/IP 协议为核心的所有协议族")]),v._v(" "),t("li",[v._v("TCP/IP 参考模型是区别于 OSI 七层模型的另一种划分方式。把所有的协议都归为 4 层模型。")])]),v._v(" "),t("ul",[t("li",[v._v("应用层")]),v._v(" "),t("li",[v._v("传输层")]),v._v(" "),t("li",[v._v("网络层")]),v._v(" "),t("li",[v._v("链路层")])]),v._v(" "),t("ol",{attrs:{start:"7"}},[t("li",[v._v("常说的数据包是什么东西？网络层及以上三层中，数据的单位。")])]),v._v(" "),t("p",[v._v("每个分层都会对发送的数据添加一个首部，首部包含了盖层协议相关的信息，而真正需要发送的内容称之为数据。\n对于下层来说，上层发过来的所有内容都会被当作为本层的数据。")]),v._v(" "),t("p",[v._v("传输层：TCP 包：TCP 包首部 + 数据\n网络层：IP 包：IP 包首部 + (TCP 包首部 + 数据)\n数据链路层：以太网包: 以太网包首部+ (IP 包首部 + (TCP 包首部 + 数据))\n...")]),v._v(" "),t("ol",{attrs:{start:"8"}},[t("li",[v._v("每层在接收到数据后，处理添加首部，还要做什么？\n每层协议需要做的工作都各不相同")])]),v._v(" "),t("p",[v._v("发送端：")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("传输层: 通过添加 TCP 首部，来保证数据的可靠性传输")])]),v._v(" "),t("li",[t("p",[v._v("网络层：参考路由控制表，决定接收此 IP 包的路由和朱局")])]),v._v(" "),t("li",[t("p",[v._v("数据链路层：将生成的包通过物理层传输给接收端")])]),v._v(" "),t("li",[t("p",[v._v("数据链路层: 接收到数据后，判断数据是否是发送自己的 MAC 地址")])]),v._v(" "),t("li",[t("p",[v._v("网络层：从首部里判断此 IP 是否和自己的当前 IP 相匹配")])]),v._v(" "),t("li",[t("p",[v._v("传输层：检查端口号")])])]),v._v(" "),t("p",[v._v("上述网络协议中涉及到的地址主要有:")]),v._v(" "),t("ul",[t("li",[v._v("数据链路层中涉及到的 MAC 地址，用来识别同一链路中不同的计算机")]),v._v(" "),t("li",[v._v("网络层中的 IP 地址，用来识别 TCP/IP 网络中互联的主机和路由器")]),v._v(" "),t("li",[v._v("传输层中的端口号，应用程序地址，识别同一主机中进行通信的不同应用程序")])]),v._v(" "),t("ol",{attrs:{start:"9"}},[t("li",[v._v("通过上述三个地址是否就可以识别一次通信了？\n没有办法确认。")])]),v._v(" "),t("ul",[t("li",[v._v("IP 首部：还需要区分源 IP 地址和目标 IP 地址")]),v._v(" "),t("li",[v._v("协议号：指的是 TCP 或者 UDP")]),v._v(" "),t("li",[v._v("TCP 首部：源端口号，目标端口号")])]),v._v(" "),t("ol",{attrs:{start:"10"}},[t("li",[v._v("UDP 以及 TCP 经常使用到的场景以及区别")])]),v._v(" "),t("ul",[t("li",[v._v("UDP 是无连接的，TCP 必须通过三次握手建立连接，通过四次挥手断开连接")]),v._v(" "),t("li",[v._v("UDP 是面向报文的，没有拥塞控制，所以速度款，适合多媒体通信传输 (实时性，对数据要求不是很高)")]),v._v(" "),t("li",[v._v("TCP 只能是一对一的可靠性传输")])]),v._v(" "),t("p",[v._v("市面上常见的直播服务，底层是什么协议？\nrtmp 和 hls 直播都是基于 TCP 的，希望能提供稳定可靠的直播环境")]),v._v(" "),t("ol",{attrs:{start:"11"}},[t("li",[v._v("TCP 是通过什么方式提供可靠性的？")])]),v._v(" "),t("ul",[t("li",[v._v("超时重发：发出的报文段只要没有受到及时的确认就会重发")]),v._v(" "),t("li",[v._v("数据校验：校验首部数据头，只要校验失败就会丢弃")]),v._v(" "),t("li",[v._v("数据重排：会对失去顺序的数据进行重新排序")]),v._v(" "),t("li",[v._v("流量控制: 防止缓存区的溢出")]),v._v(" "),t("li",[v._v("快重传和快恢复")]),v._v(" "),t("li",[v._v("TCP 会将数据截断为合理的长度")])]),v._v(" "),t("ol",{attrs:{start:"12"}},[t("li",[v._v("TCP 是如何进行拥塞控制的？")])]),v._v(" "),t("p",[v._v("为了防止过多的数据注入到网络层中，造成路由器或者链路过载\n发送方会维持一个拥塞窗口，是一个状态变量。cwnd")]),v._v(" "),t("p",[v._v("ssthresh 慢开始门限")]),v._v(" "),t("p",[v._v("cwnd < ssthresh 使用慢开始算法，也就是乘法算法\ncwnd > ssthresh 使用拥塞避免算法，也就是加法算法\ncwnd = ssthresh 使用两者其一，不固定")]),v._v(" "),t("p",[v._v("当出现拥塞的情况：\n把门限值设置为当前的一半")]),v._v(" "),t("p",[v._v("当连续收到 3 个重传的时候, 使用快重传和快恢复")]),v._v(" "),t("ol",{attrs:{start:"13"}},[t("li",[t("p",[v._v("TCP 协议的一次数据传输，从建立连接到断开连接需要经历哪些过程？")])]),v._v(" "),t("li",[t("p",[v._v("IP 地址")])])]),v._v(" "),t("p",[v._v("IPv4 是由 32 位正整数表示的, 二进制。日常使用中会将地址转换为 4 个 8 位二进制")]),v._v(" "),t("p",[v._v("172.2.2.22\n172.2.2 是网络表示，标识是否在同一网段\n22 是主机标识，同一网段内的主机标识不能重复")]),v._v(" "),t("p",[v._v("IPv6 是由 256 位正整数表示的，二进制。日常使用中会将地址转换为 8 个 2 位 16 进制")]),v._v(" "),t("ol",{attrs:{start:"15"}},[t("li",[v._v("DNS (domain name system)")])]),v._v(" "),t("p",[t("strong",[v._v("doc.baidu.com")])]),v._v(" "),t("ul",[t("li",[v._v("客户端 query => doc.baidu.com => dns 服务器 (首先会检查自己的缓存，如果存在记录则直接返回)")]),v._v(" "),t("li",[v._v("DNS 服务器 => 根域名服务器(返回顶级域名服务器地址.com)")]),v._v(" "),t("li",[v._v("DNS 服务器 => 查询顶级域名服务器(.com) => 二级域名服务器(baidu.com)权威域名服务器")]),v._v(" "),t("li",[v._v("DNS 服务器 => 查询二级域名服务器(.baidu.com) => 查询到目标域名的地址(doc.baidu.com)")]),v._v(" "),t("li",[v._v("DNS 服务器 => 缓存结果并返回给客户端")])]),v._v(" "),t("h4",{attrs:{id:"如何通过-nodejs-来创建一个-tcp-服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何通过-nodejs-来创建一个-tcp-服务","aria-hidden":"true"}},[v._v("#")]),v._v(" 如何通过 NodeJs 来创建一个 TCP 服务")]),v._v(" "),t("p",[v._v("Socket(套接字): 是应用层和传输层直接的一个抽象层，把 TCP/IP 复杂的操作通过抽象为应用层提供 API。")]),v._v(" "),t("p",[v._v("用来实现进程在网络间的通信")]),v._v(" "),t("p",[v._v("http: 应用层模块，主要按照特定协议编解码数据\nnet: 传输层模块，主要负责传输编码后的应用层数据\nhttps: 包含 http crypto, 主要是确保数据的安全性")]),v._v(" "),t("h3",{attrs:{id:"http"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http","aria-hidden":"true"}},[v._v("#")]),v._v(" HTTP")]),v._v(" "),t("p",[v._v("HTTP 是建立在 TCP 协议之上的超文本传输协议。")]),v._v(" "),t("p",[v._v("一次完成的 HTTP 通信过程大概如下:")]),v._v(" "),t("ol",[t("li",[v._v("建立 TCP 连接, 才能建立接下来的 HTTP 连接")]),v._v(" "),t("li",[v._v("客户端向服务端发送请求命令\nGET Info")]),v._v(" "),t("li",[v._v("客户端发送请求头信息")]),v._v(" "),t("li",[v._v("服务端应答")]),v._v(" "),t("li",[v._v("服务端返回相应头信息")]),v._v(" "),t("li",[v._v("服务端向客户端发送数据")]),v._v(" "),t("li",[v._v("服务器关闭 TCP 连接\nConnection: keep-alive,")])]),v._v(" "),t("h4",{attrs:{id:"http-协议都有哪些特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-协议都有哪些特点","aria-hidden":"true"}},[v._v("#")]),v._v(" HTTP 协议都有哪些特点")]),v._v(" "),t("ol",[t("li",[v._v("通过请求和响应的交换达成通信")]),v._v(" "),t("li",[v._v("连接都是无状态的")]),v._v(" "),t("li",[v._v("通过 Cookie 来实现状态管理\nSet-Cookie 用于服务端向客户端种入 Cookie")]),v._v(" "),t("li",[v._v("通过 URL 定位资源\nURI: 同一资源标识符, 比如身份证号\nURL: 统一资源定位符, 比如地址")])]),v._v(" "),t("p",[v._v("URI 是一个抽象类，它规定实体类需要实现找到资源的功能\nURL 是一个 URI 的实现，通过定位来实现 URI 的接口")]),v._v(" "),t("ol",{attrs:{start:"5"}},[t("li",[t("p",[v._v("通过各种方法来标识自己的意图\nGET POST PUT UPDATE DELETE PATCH HEAD")])]),v._v(" "),t("li",[t("p",[v._v("持久连接\nGTTP/1.1 所有的请求都是默认持久性的")])])]),v._v(" "),t("p",[v._v("不需要持久性的请求可以设置 Connection: false")]),v._v(" "),t("ol",{attrs:{start:"7"}},[t("li",[v._v("管道机制")])]),v._v(" "),t("p",[v._v("支持在同一个 TCP 连接里，客户端可以同时发送多个请求")]),v._v(" "),t("p",[v._v("因为响应是有顺序的，如果开始的请求特别慢，会阻塞后面的请求。所以会造成队头拥塞。")]),v._v(" "),t("p",[v._v("在 HTTP1.1 中,Chrome 浏览器最多同时支持开启 6 个 TCP 请求。但每个 TCP 请求最多支持同时发送一个请求.")]),v._v(" "),t("h4",{attrs:{id:"http-1-0-1-1-2-0-在并发请求上的主要区别是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-1-0-1-1-2-0-在并发请求上的主要区别是什么","aria-hidden":"true"}},[v._v("#")]),v._v(" HTTP 1.0/1.1/2.0 在并发请求上的主要区别是什么?")]),v._v(" "),t("ol",[t("li",[v._v("HTTP 1.0 每个 TCP 连接只能发送一个请求，当服务器响应后就会关闭这个 TCP 连接，下次请求会重新建立连接")]),v._v(" "),t("li",[v._v("HTTP 1.1 TCP 连接默认是持久连接，增加了管道机制,每个 TCP 连接可以同时发送多个请求")]),v._v(" "),t("li",[v._v("HTTP 2.0 加入了双工模式，不仅客户端能够同时发送多个请求，服务端也能同时响应多个请求，解决了队头阻塞问题。\n多路复用，做到了一个连接可以并发处理多个请求，并发请求的数量比 1.1 增加了好几个数量级\n增加了服务器推送功能，服务器可以主动向客户端发送数据")])]),v._v(" "),t("h2",{attrs:{id:"补充知识点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#补充知识点","aria-hidden":"true"}},[v._v("#")]),v._v(" 补充知识点")])])}],!1,null,null,null);_.default=a.exports}}]);