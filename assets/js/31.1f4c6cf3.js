(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{202:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"课程目标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#课程目标","aria-hidden":"true"}},[t._v("#")]),t._v(" 课程目标")]),t._v(" "),s("ul",[s("li",[t._v("了解工程化的概念")]),t._v(" "),s("li",[t._v("熟悉工程化的步骤以及构建过程")])]),t._v(" "),s("h1",{attrs:{id:"知识要点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#知识要点","aria-hidden":"true"}},[t._v("#")]),t._v(" 知识要点")]),t._v(" "),s("h2",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念","aria-hidden":"true"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),s("p",[t._v("很难去给定一个很清晰的描述。大概的概念可以总结为结合公司现有的环境，提供的一套开发全生命周期的一整套开箱即用的整体解决方案的体系。")]),t._v(" "),s("h2",{attrs:{id:"组成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组成","aria-hidden":"true"}},[t._v("#")]),t._v(" 组成")]),t._v(" "),s("p",[t._v("在每次开始一个新项目的时候，往往思考的东西有很多：")]),t._v(" "),s("ul",[s("li",[t._v("技术选型 React, Vue")]),t._v(" "),s("li",[t._v("开发模式 前后端分离，同构指出")]),t._v(" "),s("li",[t._v("组件库选择 AntD Element")]),t._v(" "),s("li",[t._v("Mock 方案")]),t._v(" "),s("li",[t._v("是否使用某种技术的全家桶，是否满足项目实际的要求")]),t._v(" "),s("li",[t._v("是否需要手撸项目初始化脚手架工具")]),t._v(" "),s("li",[t._v("项目组织")]),t._v(" "),s("li",[t._v("分支管理 CI 持续集成")]),t._v(" "),s("li",[t._v("是否需要使用微前端解决问题")])]),t._v(" "),s("h3",{attrs:{id:"测试阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试阶段","aria-hidden":"true"}},[t._v("#")]),t._v(" 测试阶段")]),t._v(" "),s("p",[t._v("测试驱动开发 TDD\n可以提高代码质量与健壮性，但性价比不高，效率低。是否值得使用？")]),t._v(" "),s("p",[t._v("单元测试，性能优化，E2E，覆盖率")]),t._v(" "),s("p",[t._v("QA 进行的测试，自动化测试，智能化测试")]),t._v(" "),s("h3",{attrs:{id:"构建阶段-cd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构建阶段-cd","aria-hidden":"true"}},[t._v("#")]),t._v(" 构建阶段 CD")]),t._v(" "),s("p",[t._v("持续集成，使用什么持续集成方案？ Jenkins?\n打包工具 webpack rollup vite")]),t._v(" "),s("p",[t._v("打包过程中还有若干插件：")]),t._v(" "),s("ul",[s("li",[t._v("代码压缩")]),t._v(" "),s("li",[t._v("代码分割")]),t._v(" "),s("li",[t._v("CSS 预处理")])]),t._v(" "),s("h2",{attrs:{id:"webpack-配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack-配置","aria-hidden":"true"}},[t._v("#")]),t._v(" Webpack 配置")]),t._v(" "),s("h3",{attrs:{id:"module-package-bundle-chunk"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#module-package-bundle-chunk","aria-hidden":"true"}},[t._v("#")]),t._v(" module, package, bundle, chunk")]),t._v(" "),s("p",[t._v("翻译过来基本都为打包的模块的意思，具体区别在:")]),t._v(" "),s("ol",[s("li",[t._v("module 模块，module.exports。符合 common.js 或者 AMD 规范的单元。")]),t._v(" "),s("li",[t._v("package 由 module 构成，等同于一个项目")]),t._v(" "),s("li",[t._v("bundle Webpack 打包的结果，把所有的 module 打包成一个文件")]),t._v(" "),s("li",[t._v("bundle 是一种典型的 chunk, chunk 的概念更加的广泛, 例如通过主 bundle 去获取另一个业务 bundle. 通俗来说就是分割而成的子包\n如果需要进行异步加载包，会打包成若干个 bundle.(require.ensure), 可以减小首次加载 js 文件的大小\n多个 require.ensure 是并行加载的")])]),t._v(" "),s("h3",{attrs:{id:"dynamic-import-动态加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-import-动态加载","aria-hidden":"true"}},[t._v("#")]),t._v(" Dynamic Import(动态加载)")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./module'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("result: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"动态代码分割"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态代码分割","aria-hidden":"true"}},[t._v("#")]),t._v(" 动态代码分割")]),t._v(" "),s("p",[t._v("在 Webpack4 中，通过配置 optimization 中的 splitChunks(all, async) 可以让 Webpack 根据配置进行分析，将一些文件进行独立打包")]),t._v(" "),s("h1",{attrs:{id:"补充知识点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补充知识点","aria-hidden":"true"}},[t._v("#")]),t._v(" 补充知识点")])])}],!1,null,null,null);a.default=n.exports}}]);